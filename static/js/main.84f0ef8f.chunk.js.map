{"version":3,"sources":["constants/CharacterStats.js","classes/CharacterClass.js","constants/CharacterTalentScalings.js","utils/CharacterBaseDamage.js","views/CharacterBuild.js","App.js","index.js"],"names":["STAT_FIELDS","label","field","defaultValue","DAMAGE_ELEMENTS","Anemo","Cryo","Dendro","Electro","Geo","Hydro","Pyro","Physical","CharacterBuild","build","_","map","stat","statType","get","console","log","this","CharacterTalentScalings","Chongyun","elemental_skill_talent","name","element_type","scaling_stat","scaling","elemental_burst_talent","CharacterBaseDamage","characterBuild","multipliers","baseDamage","damageWithMultipliers","keys","talentName","talentDetails","damageElement","elementMultiplier","GetDamageWithMultipliers","critMultiplier","crit_damage","damageBonuses","element","GetMultipliers","talentInfo","character_name","AbilityBaseDamage","talent","talentLevel","talentScale","scalingStat","baseValue","damage","setTimeout","GetBaseDamage","charBuild","CharacterClass","attack_base","attack_total","stats","idx","Box","key","style","display","justifyContent","minWidth","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84f0ef8f.chunk.js","sourcesContent":["export const STAT_FIELDS = [\r\n  {\r\n    label: \"Name\",\r\n    field: \"character_name\",\r\n    defaultValue: \"Chongyun\"\r\n  },\r\n  {\r\n    label: \"Character Level\",\r\n    field: \"character_level\",\r\n    defaultValue: 90\r\n  },\r\n  {\r\n    label: \"Attack Talent\",\r\n    field: \"talent_level_attack\",\r\n    defaultValue: 1\r\n  },\r\n  {\r\n    label: \"Skill Talent\",\r\n    field: \"elemental_skill_talent\",\r\n    defaultValue: 1\r\n  },\r\n  {\r\n    label: \"Burst Talent\",\r\n    field: \"elemental_burst_talent\",\r\n    defaultValue: 1\r\n  },\r\n  {\r\n    label: \"Base HP\",\r\n    field: \"hp_base\",\r\n    defaultValue: 10984\r\n  },\r\n  {\r\n    label: \"MAX HP\",\r\n    field: \"hp_total\",\r\n    defaultValue: 10984\r\n  },\r\n  {\r\n    label: \"Base Attack\",\r\n    field: \"attack_base\",\r\n    defaultValue: 223\r\n  },\r\n  {\r\n    label: \"Total Attack\",\r\n    field: \"attack_total\",\r\n    defaultValue: 223\r\n  },\r\n  {\r\n    label: \"Base DEF\",\r\n    field: \"def_base\",\r\n    defaultValue: 648\r\n  },\r\n  {\r\n    label :\"Total DEF\",\r\n    field: \"def_total\",\r\n    defaultValue: 648\r\n  },\r\n  {\r\n    label :\"Elemental Mastery\",\r\n    field: \"elemental_mastery\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label :\"Crit Rate\",\r\n    field: \"crit_rate\",\r\n    defaultValue: 5\r\n  },\r\n  {\r\n    label :\"Crit Damage\",\r\n    field: \"crit_damage\",\r\n    defaultValue: 15\r\n  },\r\n  {\r\n    label :\"Healing Bonus\",\r\n    field: \"healing_bonus\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label :\"Energy Recharge\",\r\n    field: \"energy_recharge\",\r\n    defaultValue: 100\r\n  },\r\n  {\r\n    label: \"Anemo\",\r\n    field: \"DMG_Bonus_Anemo\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Cryo\",\r\n    field: \"DMG_Bonus_Cryo\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Dendro\",\r\n    field: \"DMG_Bonus_Dendro\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Electro\",\r\n    field: \"DMG_Bonus_Electro\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Geo\",\r\n    field: \"DMG_Bonus_Geo\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Hydro\",\r\n    field: \"DMG_Bonus_Hydro\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Pyro\",\r\n    field: \"DMG_Bonus_Pyro\",\r\n    defaultValue: 0\r\n  },\r\n  {\r\n    label: \"Physical\",\r\n    field: \"DMG_Bonus_Physical\",\r\n    defaultValue: 0\r\n  }\r\n];\r\n\r\nexport const DAMAGE_ELEMENTS = {\r\n  Anemo: \"DMG_Bonus_Anemo\",\r\n  Cryo: \"DMG_Bonus_Cryo\",\r\n  Dendro: \"DMG_Bonus_Dendro\",\r\n  Electro: \"DMG_Bonus_Electro\",\r\n  Geo: \"DMG_Bonus_Geo\",\r\n  Hydro: \"DMG_Bonus_Hydro\",\r\n  Pyro: \"DMG_Bonus_Pyro\",\r\n  Physical: \"DMG_Bonus_Physical\"\r\n};\r\n","import _ from \"lodash\";\r\nimport { STAT_FIELDS } from \"../constants/CharacterStats\";\r\n\r\n/**\r\n * @description A class that represents a character build\r\n * @param {Object} build - an object of stats\r\n */\r\nclass CharacterBuild {\r\n  constructor(build) {\r\n    _.map(STAT_FIELDS, stat => {\r\n      const statType = _.get(stat, \"field\");\r\n      const defaultValue = _.get(stat, \"defaultValue\");\r\n\r\n      this[statType] = _.get(build, statType) ?? defaultValue;\r\n    });\r\n  }\r\n\r\n  // displays character stats\r\n  display() {\r\n    console.log(this);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default CharacterBuild ?? 0;\r\n","const CharacterTalentScalings = {\r\n  Chongyun: {\r\n    elemental_skill_talent: {\r\n      name: \"elemental_skill\",\r\n      element_type: \"Cryo\",\r\n      scaling_stat: \"attack_total\",\r\n      scaling: [\r\n        172.04,\r\n        184.94,\r\n        197.85,\r\n        215.05,\r\n        227.95,\r\n        240.86,\r\n        258.06,\r\n        275.26,\r\n        292.47,\r\n        309.67,\r\n        326.88,\r\n        344.08,\r\n        365.59,\r\n        387.09,\r\n        408.6\r\n      ]\r\n    },\r\n    elemental_burst_talent: {\r\n      name: \"elemental_burst\",\r\n      element_type: \"Cryo\",\r\n      scaling_stat: \"attack_total\",\r\n      scaling: [\r\n        142.4,\r\n        153.08,\r\n        163.76,\r\n        178,\r\n        188.68,\r\n        199.36,\r\n        213.6,\r\n        227.84,\r\n        242.08,\r\n        256.32,\r\n        270.56,\r\n        284.56,\r\n        302.6,\r\n        320.4,\r\n        338.2\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\nexport default CharacterTalentScalings;\r\n","import { get, keys, map } from \"lodash\";\r\nimport CharacterTalentScalings from \"../constants/CharacterTalentScalings\";\r\nimport { DAMAGE_ELEMENTS } from \"../constants/CharacterStats\";\r\n\r\n/**\r\n * @description calculates the damage output for a character's stats\r\n * @param {Object} characterBuild characterBuild  object\r\n * @returns damage output for each skill\r\n */\r\nfunction CharacterBaseDamage(characterBuild) {\r\n  /**\r\n   * @descriptions computes the base ability damage for the character build\r\n   * @param {Object} characterBuild the character build\r\n   * @returns {Object} element and base damage for each ability\r\n   */\r\n  const GetBaseDamage = characterBuild => {\r\n    const talentInfo = CharacterTalentScalings[characterBuild.character_name];\r\n    let AbilityBaseDamage = {};\r\n\r\n    map(keys(talentInfo), talent => {\r\n      const talentDetails = get(talentInfo, talent);\r\n      const talentLevel = get(characterBuild, talent);\r\n\r\n      const talentScale = get(talentDetails, \"scaling\")[talentLevel - 1] / 100;\r\n      const scalingStat = get(talentDetails, \"scaling_stat\");\r\n      const baseValue = get(characterBuild, scalingStat);\r\n\r\n      AbilityBaseDamage[get(talentDetails, \"name\")] = {\r\n        element: get(talentDetails, \"element_type\"),\r\n        damage: baseValue * talentScale\r\n      };\r\n    });\r\n\r\n    setTimeout(10000);\r\n    return AbilityBaseDamage;\r\n  };\r\n\r\n  /**\r\n   * @description computes the multipliers for the character build\r\n   * @param {Object} characterBuild the character build\r\n   * @returns {Object} number multipliers for each element type\r\n   */\r\n  const GetMultipliers = characterBuild => {\r\n    const critMultiplier = 1 + characterBuild.crit_damage / 100;\r\n    let damageBonuses = {};\r\n\r\n    map(keys(DAMAGE_ELEMENTS), element => {\r\n      damageBonuses[element] =\r\n        (1 + get(characterBuild, DAMAGE_ELEMENTS[element]) / 100) *\r\n        critMultiplier;\r\n    });\r\n\r\n    return damageBonuses;\r\n  };\r\n\r\n  /**\r\n   * @description computes talent damage with multipliers for correct elements\r\n   * @param {Object} multipliers an object of multipliers for each element\r\n   * @param {Object} baseDamage an object of base damages for each talent\r\n   * @returns {Object} an Object of talent Damages after multipliers\r\n   */\r\n  const GetDamageWithMultipliers = (multipliers, baseDamage) => {\r\n    let damageWithMultipliers = baseDamage;\r\n\r\n    map(keys(baseDamage), talentName => {\r\n      const talentDetails = get(baseDamage, talentName);\r\n      const damageElement = get(talentDetails, \"element\");\r\n      const elementMultiplier = get(multipliers, damageElement) ?? 1;\r\n      damageWithMultipliers[talentName][\"damage\"] *= elementMultiplier;\r\n    });\r\n\r\n    return damageWithMultipliers;\r\n  };\r\n\r\n  const damageMultipliers = GetMultipliers(characterBuild);\r\n  const baseAbilityDamage = GetBaseDamage(characterBuild);\r\n\r\n  const damageWithMultipliers = GetDamageWithMultipliers(\r\n    damageMultipliers,\r\n    baseAbilityDamage\r\n  );\r\n\r\n  return damageWithMultipliers;\r\n}\r\n\r\nexport default CharacterBaseDamage;\r\n","import React from \"react\";\r\nimport { get, map, keys, values } from \"lodash\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { STAT_FIELDS } from \"../constants/CharacterStats\";\r\nimport CharacterClass from \"../classes/CharacterClass\";\r\nimport CharacterBaseDamage from \"../utils/CharacterBaseDamage\";\r\n\r\nexport default function CharacterBuild() {\r\n  const tableHeaders = map(STAT_FIELDS, stat => {\r\n    return {\r\n      label: stat.label,\r\n      field: stat.field\r\n    };\r\n  });\r\n\r\n  const build = {\r\n    character_name: \"Chongyun\",\r\n    attack_base: 733,\r\n    attack_total: 1789\r\n  };\r\n\r\n  const charBuild = new CharacterClass(build);\r\n  const baseDamage = CharacterBaseDamage(charBuild);\r\n  \r\n  return (\r\n    <>\r\n      {map(keys(charBuild), (stats, idx) => {\r\n        return (\r\n          <Box key={idx} style={{ display: \"flex\" }}>\r\n            <Box style={{ justifyContent: \"flex-start\", minWidth: \"250px\" }}>\r\n              {stats}\r\n            </Box>\r\n\r\n            <Box style={{ justifyContent: \"flex-end\", minWidth: \"100px\" }}>\r\n              {get(charBuild, stats)}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n      {map(keys(baseDamage), (talent, idx) => {\r\n        return (\r\n          <Box key={idx} style={{ display: \"flex\" }}>\r\n            <Box style={{ justifyContent: \"flex-start\", minWidth: \"250px\" }}>\r\n              {talent}\r\n            </Box>\r\n\r\n            <Box style={{ justifyContent: \"flex-end\", minWidth: \"100px\" }}>\r\n              {get(get(baseDamage, talent), \"damage\")}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CharacterBuild from \"./views/CharacterBuild\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <CharacterBuild />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./style.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}